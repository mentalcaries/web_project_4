!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n){var r=e.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderer=r,this._container=document.querySelector(n)}var n,r;return n=t,(r=[{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&e(n.prototype,r),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._headers=r}var t,r;return t=e,(r=[{key:"_checkRes",value:function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}},{key:"getCards",value:function(){var e=this;return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then((function(t){return e._checkRes(t)}))}},{key:"getProfileInfo",value:function(){var e=this;return fetch("".concat(this._baseUrl,"/users/me"),{method:"GET",headers:this._headers}).then((function(t){return e._checkRes(t)}))}},{key:"setProfileInfo",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.title})}).then((function(e){return t._checkRes(e)}))}},{key:"addNewCard",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then((function(e){return t._checkRes(e)}))}},{key:"deleteCard",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return t._checkRes(e)}))}},{key:"addCardLike",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then((function(e){return t._checkRes(e)}))}},{key:"removeCardLike",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return t._checkRes(e)}))}},{key:"changeCardStatus",value:function(e,t){return t?this.removeCardLike(e):this.addCardLike(e)}},{key:"updateProfilePicture",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((function(e){return t._checkRes(e)}))}}])&&n(t.prototype,r),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n,r,o){var i=n.currentUserId,a=o.handleCardClick,c=o.handleLikeClick,u=o.checkCardsData,s=o.handleDeleteClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._cardData=t,this._text=t.name,this._link=t.link,this._cardId=t._id,this.likes=t.likes,this.owner=t.owner,this._cardTemplate=r,this.deleteButton=this._cardTemplate.querySelector(".card__delete-button"),this._ownerId=t.owner._id,this._currentUserId=i,this._handleCardClick=a,this._handleLikeClick=c,this._checkCardsData=u,this._handleDeleteClick=s}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return this._cardTemplate.querySelector(".card").cloneNode(!0)}},{key:"_checkLikeStatus",value:function(){var e=this;return this.likes.some((function(t){return t._id===e._currentUserId}))}},{key:"_showLikeStatus",value:function(){this._countLikes(),this._checkLikeStatus()&&this._card.querySelector(".card__like-button").classList.add("card__like-button_active")}},{key:"_countLikes",value:function(){this._card.querySelector(".card__like-count").textContent=this.likes.length}},{key:"_updateLikes",value:function(e){this._card.querySelector(".card__like-count").textContent=e.likes.length}},{key:"_setEventListeners",value:function(){var e=this,t=this._card.querySelector(".card__like-button"),n=this._card.querySelector(".card__delete-button");t.addEventListener("click",(function(t){e._handleLikeClick(t.target.classList.contains("card__like-button_active")).then((function(n){t.target.classList.toggle("card__like-button_active"),e._updateLikes(n)})).catch((function(e){return console.log("Something went wrong: ".concat(e))}))})),this._currentUserId===this._ownerId?this.deleteButton.style.visibility="visible":this.deleteButton.style.visibility="hidden",n.addEventListener("click",(function(t){e._handleDeleteClick(t)}))}},{key:"getCard",value:function(){return this._card=this._getTemplate(),this._cardImage=this._card.querySelector(".card__image"),this._setEventListeners(),this._showLikeStatus(),this._card.querySelector(".card__title").textContent=this._text,this._cardImage.src=this._link,this._cardImage.alt="Picture of "+this._text,this._cardImage.addEventListener("click",this._handleCardClick),this._card}}])&&o(t.prototype,n),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var c=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this),this._submitButton=this._popupElement.querySelector(".popup__save-btn")}var t,n;return t=e,(n=[{key:"open",value:function(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keyup",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keyup",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.querySelector(".popup__close-btn").addEventListener("click",(function(t){e.close(t.target)})),this._popupElement.addEventListener("click",(function(t){t.target.closest(".popup__container")||e.close()}))}}])&&a(t.prototype,n),e}();function u(e){return(u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function l(e,t,n){return(l="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=h(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function f(e,t){return(f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function p(e,t){if(t&&("object"===u(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function h(e){return(h=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var d=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&f(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=h(r);if(o){var n=h(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return p(this,e)});function a(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),i.call(this,e)}return t=a,(n=[{key:"open",value:function(e){var t=e.link,n=e.name;this._popupElement.querySelector(".popup__caption").textContent=n;var r=this._popupElement.querySelector(".popup__image");r.src=t,r.alt="Picture of ".concat(n),l(h(a.prototype),"open",this).call(this)}}])&&s(t.prototype,n),a}(c);function _(e){return(_="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function v(e,t,n){return(v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=k(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function m(e,t){return(m=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function b(e,t){if(t&&("object"===_(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function k(e){return(k=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var g=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&m(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=k(r);if(o){var n=k(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return b(this,e)});function a(e,t){var n,r=e.submitFormHandler;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,t))._submitFormHandler=r,n._popupForm=n._popupElement.querySelector(".popup__form"),n}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputList=this._popupForm.querySelectorAll(".popup__field"),this._inputValues={},this._inputList.forEach((function(t){return e._inputValues[t.name]=t.value})),this._inputValues}},{key:"setEventListeners",value:function(){var e=this;this._popupForm.addEventListener("submit",(function(t){t.preventDefault(),e._submitButton.textContent="Saving...",e._submitFormHandler(e._getInputValues())})),v(k(a.prototype),"setEventListeners",this).call(this)}},{key:"open",value:function(){this._submitButton.textContent=this._submitButton.name,v(k(a.prototype),"open",this).call(this)}},{key:"close",value:function(){this._popupForm.reset(),v(k(a.prototype),"close",this).call(this)}}])&&y(t.prototype,n),a}(c);function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var E=function(){function e(t){var n=t.nameSelector,r=t.titleSelector,o=t.id,i=t.avatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameSelector=n,this._titleSelector=r,this._id=o,this._avatar=i}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._nameSelector.textContent,title:this._titleSelector.textContent,id:this._id,avatar:this._avatar}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.title,r=e.id,o=e.avatar;this.setUserText({name:t,title:n}),this.setUserAvatar({avatar:o}),this._id=r}},{key:"setUserText",value:function(e){var t=e.name,n=e.title;this._nameSelector.textContent=t,this._titleSelector.textContent=n}},{key:"setUserAvatar",value:function(e){var t=e.avatar;this._avatar.src=t}}])&&S(t.prototype,n),e}();function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var C=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._form=n,this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._button=this._form.querySelector(this._submitButtonSelector)}var t,n;return t=e,(n=[{key:"_toggleButtonState",value:function(){this._inputList.every((function(e){return e.validity.valid}))?(this._button.classList.remove(this._inactiveButtonClass),this._button.disabled=!1):(this._button.classList.add(this._inactiveButtonClass),this._button.disabled=!0)}},{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._hideErrorMessage(t)}))}},{key:"_showErrorMessage",value:function(e){var t=this._form.querySelector("#".concat(e.id,"-error"));t.textContent=e.validationMessage,t.classList.add(this._errorClass),e.classList.add(this._inputErrorClass)}},{key:"_hideErrorMessage",value:function(e){var t=this._form.querySelector("#".concat(e.id,"-error"));t.textContent=" ",t.classList.remove(this._errorClass),e.classList.remove(this._inputErrorClass)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideErrorMessage(e):this._showErrorMessage(e)}},{key:"_setEventListeners",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState(e._button)}))}))}},{key:"enableValidation",value:function(){this._form.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners(),this._toggleButtonState()}}])&&w(t.prototype,n),e}(),L={inputSelector:".popup__field",submitButtonSelector:".popup__save-btn",inactiveButtonClass:"popup__save-btn_disabled",inputErrorClass:"popup__field_type_error",errorClass:"popup__error_visible"},O=document.querySelector(".popup_type_edit-profile"),P=document.querySelector(".popup_type_new-item"),j=(document.querySelector(".popup_type_confirm-delete"),O.querySelector(".popup__form")),q=P.querySelector(".popup__form"),R=document.querySelector(".popup_type_edit-image").querySelector(".popup__form"),I=document.querySelector(".profile__edit-btn"),T=document.querySelector(".profile__edit-image"),B=document.querySelector(".profile__add-button"),U=(document.querySelector(".popup__close-btn"),document.querySelector(".profile__name")),x=document.querySelector(".profile__subtitle"),D=document.querySelector(".profile__image"),V=O.querySelector("#popup_name"),A=O.querySelector("#popup_title"),H=document.querySelector(".card-template").content;function F(e){return(F="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function M(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function N(e,t,n){return(N="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=G(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function J(e,t){return(J=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function z(e,t){if(t&&("object"===F(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function G(e){return(G=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var $=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&J(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=G(r);if(o){var n=G(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return z(this,e)});function a(e,t){var n,r=e.submitHandler;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,t))._submitButton=n._popupElement.querySelector(".popup__save-btn"),n._submitHandler=r,n}return t=a,(n=[{key:"open",value:function(e,t){this._submitButton.textContent=this._submitButton.name,this._card=t.target.parentElement,this._cardId=e,N(G(a.prototype),"open",this).call(this)}},{key:"setEventListeners",value:function(){var e=this;this._submitButton.addEventListener("click",(function(t){t.preventDefault(),e._submitButton.textContent="Deleting...",e._submitHandler(e._card,e._cardId)})),N(G(a.prototype),"setEventListeners",this).call(this)}}])&&M(t.prototype,n),a}(c);function K(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var Q=new C(L,j),W=new C(L,q),X=new C(L,R);Q.enableValidation(),W.enableValidation(),X.enableValidation();var Y=new r({baseUrl:"https://around.nomoreparties.co/v1/group-10",headers:{authorization:"8e942d63-a4ca-4642-8de3-5514e3f09ba0","Content-Type":"application/json"}}),Z=new E({nameSelector:U,titleSelector:x,avatar:D}),ee=new t({renderer:re},".elements");Promise.all([Y.getProfileInfo(),Y.getCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,c=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){c=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(c)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return K(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?K(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];Z.setUserInfo({name:o.name,title:o.about,id:o._id,avatar:o.avatar}),ee.renderItems(i.reverse())})).catch((function(e){console.log(e)}));var te=new g({submitFormHandler:function(e){Y.setProfileInfo(e).then((function(e){Z.setUserText({name:e.name,title:e.about}),te.close()})).catch((function(e){console.log(e)}))}},".popup_type_edit-profile");te.setEventListeners();var ne=new g({submitFormHandler:function(e){Y.updateProfilePicture(e.link).then((function(e){Z.setUserAvatar({avatar:e.avatar}),ne.close(),Q.resetValidation()})).catch((function(e){console.log(e)}))}},".popup_type_edit-image");function re(e){var t=function(e,t){var n=Z.getUserInfo();return new i(e,{currentUserId:n.id},t,{handleCardClick:function(){ie.open({link:e.link,name:e.name})},handleLikeClick:function(t){return Y.changeCardStatus(e._id,t)},checkCardsData:function(){return Y.getCards()},handleDeleteClick:function(t){ae.open(e._id,t)}})}(e,H);return ee.addItem(t.getCard())}ne.setEventListeners(),T.addEventListener("click",(function(){X.resetValidation(),ne.open()})),I.addEventListener("click",(function(){Q.resetValidation();var e=Z.getUserInfo();V.value=e.name,A.value=e.title,te.open()}));var oe=new g({submitFormHandler:function(e){Y.addNewCard(e).then((function(e){re(e),oe.close(),Q.resetValidation()})).catch((function(e){console.log(e)}))}},".popup_type_new-item");oe.setEventListeners(),B.addEventListener("click",(function(e){W.resetValidation(),oe.open()}));var ie=new d(".popup_type_picture");ie.setEventListeners();var ae=new $({submitHandler:function(e,t){Y.deleteCard(t).then((function(t){e.remove(),ae.close()})).catch((function(e){console.log(e)}))}},".popup_type_confirm-delete");ae.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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YnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvQXBpLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvdXRpbHMvY29uc3RhbnRzLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9Qb3B1cENvbmZpcm1EZWxldGUuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9wYWdlcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcbmNsYXNzIFNlY3Rpb24ge1xuICBjb25zdHJ1Y3Rvcih7IHJlbmRlcmVyIH0sIGNhcmRDb250YWluZXIpIHtcblxuICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7XG4gICAgdGhpcy5fY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihjYXJkQ29udGFpbmVyKTtcbiAgICAgfVxuXG4gIHJlbmRlckl0ZW1zKGl0ZW1zKSB7ICAgXG4gICAgaXRlbXMuZm9yRWFjaChpdGVtID0+IHtcbiAgICAgIHRoaXMuX3JlbmRlcmVyKGl0ZW0pO1xuICAgIH0pXG4gIH1cblxuICBhZGRJdGVtKGNhcmQpIHtcbiAgICAvL3Rha2VzIERPTSBlbGVtZW50IGFuZCBhZGRzIGl0IHRvIHRoZSBjb250YWluZXJcbiAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChjYXJkKVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFNlY3Rpb247XG4iLCJjbGFzcyBBcGkge1xuICBjb25zdHJ1Y3Rvcih7IGJhc2VVcmwsIGhlYWRlcnMgfSkge1xuICAgIHRoaXMuX2Jhc2VVcmwgPSBiYXNlVXJsO1xuICAgIHRoaXMuX2hlYWRlcnMgPSBoZWFkZXJzO1xuICB9XG5cbiAgX2NoZWNrUmVzKHJlcykge1xuICAgIGlmIChyZXMub2spIHtcbiAgICAgIHJldHVybiByZXMuanNvbigpXG4gICAgfVxuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcbiAgfVxuXG4gIGdldENhcmRzKCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnN9KVxuICAgICAgLnRoZW4oKHJlcykgPT4gdGhpcy5fY2hlY2tSZXMocmVzKSlcblxuICB9XG5cbiAgZ2V0UHJvZmlsZUluZm8oKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xuICAgICAgbWV0aG9kOiBcIkdFVFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVyc1xuICAgIH0pXG4gICAgICAudGhlbigocmVzKSA9PiB0aGlzLl9jaGVja1JlcyhyZXMpKVxuICB9XG5cbiAgc2V0UHJvZmlsZUluZm8oaXRlbSkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZWAsIHtcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgbmFtZTogaXRlbS5uYW1lLFxuICAgICAgICBhYm91dDogaXRlbS50aXRsZVxuICAgICAgfSlcbiAgICB9KVxuICAgIC50aGVuKChyZXMpID0+IHRoaXMuX2NoZWNrUmVzKHJlcykpXG4gIH1cblxuICBhZGROZXdDYXJkKGNhcmQpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLCB7XG4gICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGNhcmQpXG4gICAgfSlcbiAgICAgIC50aGVuKChyZXMpID0+IHRoaXMuX2NoZWNrUmVzKHJlcykpXG5cbiAgfVxuXG4gIGRlbGV0ZUNhcmQoaWQpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtpZH1gLCB7XG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgIH0pXG4gICAgICAudGhlbigocmVzKSA9PiB0aGlzLl9jaGVja1JlcyhyZXMpKVxuICB9XG5cblxuXG4gIGFkZENhcmRMaWtlKGlkKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzL2xpa2VzLyR7aWR9YCwge1xuICAgICAgbWV0aG9kOiBcIlBVVFwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVyc1xuICAgIH0pXG4gICAgICAudGhlbigocmVzKSA9PiB0aGlzLl9jaGVja1JlcyhyZXMpKVxuICB9XG5cbiAgcmVtb3ZlQ2FyZExpa2UoaWQpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvbGlrZXMvJHtpZH1gLCB7XG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzXG4gICAgfSlcbiAgICAgIC50aGVuKChyZXMpID0+IHRoaXMuX2NoZWNrUmVzKHJlcykpXG4gIH1cblxuXG4gIGNoYW5nZUNhcmRTdGF0dXMoaWQsIGxpa2VkKSB7XG4gICAgaWYgKGxpa2VkKSB7IHJldHVybiB0aGlzLnJlbW92ZUNhcmRMaWtlKGlkKSB9XG4gICAgZWxzZSByZXR1cm4gdGhpcy5hZGRDYXJkTGlrZShpZClcbiAgfVxuXG4gIHVwZGF0ZVByb2ZpbGVQaWN0dXJlKGF2YXRhcikge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZS9hdmF0YXJgLCB7XG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7YXZhdGFyOiBhdmF0YXJ9KVxuICAgIH0pXG4gICAgICAudGhlbigocmVzKSA9PiB0aGlzLl9jaGVja1JlcyhyZXMpKVxuXG4gIH1cbiAgXG5cbn1cblxuXG5leHBvcnQgZGVmYXVsdCBBcGkiLCJjbGFzcyBDYXJkIHtcbiAgY29uc3RydWN0b3IoZGF0YSwgeyBjdXJyZW50VXNlcklkIH0sIGNhcmRUZW1wbGF0ZSwgeyBoYW5kbGVDYXJkQ2xpY2ssIGhhbmRsZUxpa2VDbGljaywgY2hlY2tDYXJkc0RhdGEsIGhhbmRsZURlbGV0ZUNsaWNrIH0pIHtcbiAgICB0aGlzLl9jYXJkRGF0YSA9IGRhdGE7XG4gICAgdGhpcy5fdGV4dCA9IGRhdGEubmFtZTtcbiAgICB0aGlzLl9saW5rID0gZGF0YS5saW5rO1xuICAgIHRoaXMuX2NhcmRJZCA9IGRhdGEuX2lkXG4gICAgdGhpcy5saWtlcyA9IGRhdGEubGlrZXM7XG4gICAgdGhpcy5vd25lciA9IGRhdGEub3duZXJcbiAgICB0aGlzLl9jYXJkVGVtcGxhdGUgPSBjYXJkVGVtcGxhdGU7XG4gICAgdGhpcy5kZWxldGVCdXR0b24gPSB0aGlzLl9jYXJkVGVtcGxhdGUucXVlcnlTZWxlY3RvcihcIi5jYXJkX19kZWxldGUtYnV0dG9uXCIpXG4gICAgdGhpcy5fb3duZXJJZCA9IGRhdGEub3duZXIuX2lkO1xuICAgIHRoaXMuX2N1cnJlbnRVc2VySWQgPSBjdXJyZW50VXNlcklkO1xuICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljayA9IGhhbmRsZUNhcmRDbGljaztcbiAgICB0aGlzLl9oYW5kbGVMaWtlQ2xpY2sgPSBoYW5kbGVMaWtlQ2xpY2s7XG4gICAgdGhpcy5fY2hlY2tDYXJkc0RhdGEgPSBjaGVja0NhcmRzRGF0YTtcbiAgICB0aGlzLl9oYW5kbGVEZWxldGVDbGljayA9IGhhbmRsZURlbGV0ZUNsaWNrO1xuICB9XG5cblxuICBfZ2V0VGVtcGxhdGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2NhcmRUZW1wbGF0ZS5xdWVyeVNlbGVjdG9yKFwiLmNhcmRcIikuY2xvbmVOb2RlKHRydWUpO1xuICB9XG5cblxuICBfY2hlY2tMaWtlU3RhdHVzKCkge1xuICAgIGNvbnN0IGlzTGlrZWQgPSB0aGlzLmxpa2VzLnNvbWUoKGxpa2UpID0+IGxpa2UuX2lkID09PSB0aGlzLl9jdXJyZW50VXNlcklkKTtcbiAgICByZXR1cm4gaXNMaWtlZDtcbiAgfVxuXG5cbiAgX3Nob3dMaWtlU3RhdHVzKCkge1xuICAgIHRoaXMuX2NvdW50TGlrZXMoKTtcbiAgICBpZiAodGhpcy5fY2hlY2tMaWtlU3RhdHVzKCkpIHtcbiAgICAgIHRoaXMuX2NhcmQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19saWtlLWJ1dHRvblwiKS5jbGFzc0xpc3QuYWRkKFwiY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlXCIpXG4gICAgfVxuICB9XG5cblxuICBfY291bnRMaWtlcygpIHtcbiAgICB0aGlzLl9jYXJkLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fbGlrZS1jb3VudFwiKS50ZXh0Q29udGVudCA9IHRoaXMubGlrZXMubGVuZ3RoO1xuICB9XG5cbiAgX3VwZGF0ZUxpa2VzKGNhcmQpIHtcbiAgICB0aGlzLl9jYXJkLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fbGlrZS1jb3VudFwiKS50ZXh0Q29udGVudCA9IGNhcmQubGlrZXMubGVuZ3RoO1xuICB9XG5cblxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgY29uc3QgbGlrZUJ1dHRvbiA9IHRoaXMuX2NhcmQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19saWtlLWJ1dHRvblwiKTtcbiAgICBjb25zdCBkZWxldGVCdXR0b24gPSB0aGlzLl9jYXJkLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fZGVsZXRlLWJ1dHRvblwiKTtcblxuICAgIC8vTGlrZSBDYXJkXG5cbiAgICBsaWtlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZ0KSA9PiB7XG4gICAgICB0aGlzLl9oYW5kbGVMaWtlQ2xpY2soZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJjYXJkX19saWtlLWJ1dHRvbl9hY3RpdmVcIikpXG4gICAgICAgIC50aGVuKChjYXJkKSA9PiB7XG4gICAgICAgICAgZXZ0LnRhcmdldC5jbGFzc0xpc3QudG9nZ2xlKFwiY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlXCIpXG4gICAgICAgICAgdGhpcy5fdXBkYXRlTGlrZXMoY2FyZCk7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaCgoZXJyKT0+Y29uc29sZS5sb2coYFNvbWV0aGluZyB3ZW50IHdyb25nOiAke2Vycn1gKSlcbiAgICB9KTtcblxuICAgIC8vSGlkZSBidXR0b24gaWYgY2FyZCBkb2VzIG5vdCBiZWxvbmcgdG8gY3VycmVudCB1c2VyXG4gICAgaWYgKHRoaXMuX2N1cnJlbnRVc2VySWQgPT09IHRoaXMuX293bmVySWQpIHtcbiAgICAgIHRoaXMuZGVsZXRlQnV0dG9uLnN0eWxlLnZpc2liaWxpdHkgPSBcInZpc2libGVcIjtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5kZWxldGVCdXR0b24uc3R5bGUudmlzaWJpbGl0eSA9IFwiaGlkZGVuXCI7XG4gICAgfVxuXG5cbiAgICBkZWxldGVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldnQpID0+IHtcbiAgICAgICAgdGhpcy5faGFuZGxlRGVsZXRlQ2xpY2soZXZ0KVxuICAgIH0pXG4gIH1cblxuXG4gIGdldENhcmQoKSB7XG5cbiAgICB0aGlzLl9jYXJkID0gdGhpcy5fZ2V0VGVtcGxhdGUoKTtcbiAgICB0aGlzLl9jYXJkSW1hZ2UgPSB0aGlzLl9jYXJkLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9faW1hZ2VcIik7XG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLl9zaG93TGlrZVN0YXR1cygpO1xuICAgIGNvbnN0IGNhcmRUaXRsZSA9IHRoaXMuX2NhcmQucXVlcnlTZWxlY3RvcihcIi5jYXJkX190aXRsZVwiKTtcbiAgICBjYXJkVGl0bGUudGV4dENvbnRlbnQgPSB0aGlzLl90ZXh0O1xuICAgIHRoaXMuX2NhcmRJbWFnZS5zcmMgPSB0aGlzLl9saW5rO1xuICAgIHRoaXMuX2NhcmRJbWFnZS5hbHQgPSBcIlBpY3R1cmUgb2YgXCIgKyB0aGlzLl90ZXh0O1xuICAgIHRoaXMuX2NhcmRJbWFnZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5faGFuZGxlQ2FyZENsaWNrKVxuXG5cblxuICAgIHJldHVybiB0aGlzLl9jYXJkO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IENhcmQ7XG4iLCJjbGFzcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHBvcHVwU2VsZWN0b3IpO1xuICAgIHRoaXMuX2hhbmRsZUVzY0Nsb3NlID0gdGhpcy5faGFuZGxlRXNjQ2xvc2UuYmluZCh0aGlzKTtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24gPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fc2F2ZS1idG5cIilcbiAgfVxuXG4gIG9wZW4oKSB7XG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJwb3B1cF9vcGVuZWRcIik7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleXVwXCIsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcblxuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJwb3B1cF9vcGVuZWRcIik7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleXVwXCIsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcbiAgfVxuXG4gIF9oYW5kbGVFc2NDbG9zZShldnQpIHtcblxuICAgIGlmIChldnQua2V5ID09PSBcIkVzY2FwZVwiKSB7XG4gICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfVxuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgLy9DbG9zZSBidXR0b25cbiAgICBjb25zdCBjbG9zZUJ1dHRvbiA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19jbG9zZS1idG5cIilcbiAgICBjbG9zZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2dCkgPT4ge1xuICAgICAgdGhpcy5jbG9zZShldnQudGFyZ2V0KTtcbiAgICB9KVxuXG4gICAgLy9PdmVybGF5XG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZ0KSA9PiB7XG4gICAgICBpZiAoZXZ0LnRhcmdldC5jbG9zZXN0KFwiLnBvcHVwX19jb250YWluZXJcIikpIHJldHVyblxuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH0pXG4gIH1cblxufVxuXG5leHBvcnQgZGVmYXVsdCBQb3B1cDsiLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcblxuY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cHtcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcil7XG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XG4gIH1cblxuICBvcGVuKHtsaW5rLCBuYW1lfSl7XG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2NhcHRpb25cIikudGV4dENvbnRlbnQgPSBuYW1lO1xuICAgIGNvbnN0IGltYWdlID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2ltYWdlXCIpO1xuICAgIGltYWdlLnNyYyA9IGxpbms7XG4gICAgaW1hZ2UuYWx0ID0gYFBpY3R1cmUgb2YgJHtuYW1lfWA7XG4gICAgc3VwZXIub3BlbigpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFBvcHVwV2l0aEltYWdlOyIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuXG5jbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcih7IHN1Ym1pdEZvcm1IYW5kbGVyIH0sIHBvcHVwU2VsZWN0b3IpIHtcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcbiAgICB0aGlzLl9zdWJtaXRGb3JtSGFuZGxlciA9IHN1Ym1pdEZvcm1IYW5kbGVyO1xuICAgIHRoaXMuX3BvcHVwRm9ybSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19mb3JtXCIpO1xuICB9XG5cbiAgX2dldElucHV0VmFsdWVzKCkge1xuICAgIHRoaXMuX2lucHV0TGlzdCA9IHRoaXMuX3BvcHVwRm9ybS5xdWVyeVNlbGVjdG9yQWxsKFwiLnBvcHVwX19maWVsZFwiKTtcbiAgICB0aGlzLl9pbnB1dFZhbHVlcyA9IHt9O1xuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKGlucHV0ID0+IHRoaXMuX2lucHV0VmFsdWVzW2lucHV0Lm5hbWVdID0gaW5wdXQudmFsdWUpO1xuXG4gICAgcmV0dXJuIHRoaXMuX2lucHV0VmFsdWVzO1xuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5fcG9wdXBGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSBcIlNhdmluZy4uLlwiO1xuICAgICAgdGhpcy5fc3VibWl0Rm9ybUhhbmRsZXIodGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKSk7XG5cblxuICAgIH0pO1xuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cblxuICBvcGVuKCl7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uLnRleHRDb250ZW50ID0gdGhpcy5fc3VibWl0QnV0dG9uLm5hbWU7XG4gICAgc3VwZXIub3BlbigpO1xuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgdGhpcy5fcG9wdXBGb3JtLnJlc2V0KCk7XG4gICAgc3VwZXIuY2xvc2UoKTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFBvcHVwV2l0aEZvcm07IiwiY2xhc3MgVXNlckluZm8ge1xuICBjb25zdHJ1Y3Rvcih7IG5hbWVTZWxlY3RvciwgdGl0bGVTZWxlY3RvciwgaWQsIGF2YXRhciB9KSB7XG4gICAgdGhpcy5fbmFtZVNlbGVjdG9yID0gbmFtZVNlbGVjdG9yO1xuICAgIHRoaXMuX3RpdGxlU2VsZWN0b3IgPSB0aXRsZVNlbGVjdG9yO1xuICAgIHRoaXMuX2lkID0gaWQ7XG4gICAgdGhpcy5fYXZhdGFyID0gYXZhdGFyO1xuICAgIFxuICB9XG5cbiAgZ2V0VXNlckluZm8oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5hbWU6IHRoaXMuX25hbWVTZWxlY3Rvci50ZXh0Q29udGVudCxcbiAgICAgIHRpdGxlOiB0aGlzLl90aXRsZVNlbGVjdG9yLnRleHRDb250ZW50LFxuICAgICAgaWQ6IHRoaXMuX2lkLFxuICAgICAgYXZhdGFyOiB0aGlzLl9hdmF0YXJcbiAgICB9O1xuICB9XG5cbiAgc2V0VXNlckluZm8oe25hbWUsIHRpdGxlLCBpZCwgYXZhdGFyfSkge1xuICAgIHRoaXMuc2V0VXNlclRleHQoe25hbWUsIHRpdGxlfSlcbiAgICB0aGlzLnNldFVzZXJBdmF0YXIoe2F2YXRhcn0pXG4gICAgdGhpcy5faWQgPSBpZFxuICB9O1xuXG4gIHNldFVzZXJUZXh0KHtuYW1lLCB0aXRsZSx9KSB7XG4gICAgdGhpcy5fbmFtZVNlbGVjdG9yLnRleHRDb250ZW50ID0gbmFtZTtcbiAgICB0aGlzLl90aXRsZVNlbGVjdG9yLnRleHRDb250ZW50ID0gdGl0bGU7XG4gIH07XG5cbiAgc2V0VXNlckF2YXRhcih7YXZhdGFyfSl7XG4gICAgdGhpcy5fYXZhdGFyLnNyYyA9IGF2YXRhclxuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBVc2VySW5mbztcblxuLy9nZXRVc2VySW5mbygpLiBJbnB1dCBmaWVsZHMgc2hvdWxkID0ge25hbWUsIHRpdGxlfSIsImNsYXNzIEZvcm1WYWxpZGF0b3Ige1xuICBjb25zdHJ1Y3RvcihzZXR0aW5ncywgZm9ybUVsZW1lbnQpIHtcbiAgICB0aGlzLl9pbnB1dFNlbGVjdG9yID0gc2V0dGluZ3MuaW5wdXRTZWxlY3RvcjtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvciA9IHNldHRpbmdzLnN1Ym1pdEJ1dHRvblNlbGVjdG9yO1xuICAgIHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MgPSBzZXR0aW5ncy5pbmFjdGl2ZUJ1dHRvbkNsYXNzO1xuICAgIHRoaXMuX2lucHV0RXJyb3JDbGFzcyA9IHNldHRpbmdzLmlucHV0RXJyb3JDbGFzcztcbiAgICB0aGlzLl9lcnJvckNsYXNzID0gc2V0dGluZ3MuZXJyb3JDbGFzcztcbiAgICB0aGlzLl9mb3JtID0gZm9ybUVsZW1lbnQ7XG4gICAgdGhpcy5faW5wdXRMaXN0ID0gQXJyYXkuZnJvbSh0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5faW5wdXRTZWxlY3RvcikpO1xuICAgIHRoaXMuX2J1dHRvbiA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3Rvcih0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3Rvcik7XG4gICAgXG4gIH1cblxuXG5cbiAgX3RvZ2dsZUJ1dHRvblN0YXRlKCkge1xuICAgICBjb25zdCBpc1ZhbGlkID0gdGhpcy5faW5wdXRMaXN0LmV2ZXJ5KChpbnB1dCkgPT4gaW5wdXQudmFsaWRpdHkudmFsaWQpO1xuXG5cbiAgICBpZiAoaXNWYWxpZCkge1xuICAgICAgdGhpcy5fYnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcylcbiAgICAgIHRoaXMuX2J1dHRvbi5kaXNhYmxlZCA9IGZhbHNlO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIHRoaXMuX2J1dHRvbi5jbGFzc0xpc3QuYWRkKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpXG4gICAgICB0aGlzLl9idXR0b24uZGlzYWJsZWQgPSB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIHJlc2V0VmFsaWRhdGlvbigpIHtcbiAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dCkgPT4ge1xuICAgICAgdGhpcy5faGlkZUVycm9yTWVzc2FnZShpbnB1dCk7XG4gICAgfSlcbiAgfVxuXG4gIF9zaG93RXJyb3JNZXNzYWdlKGlucHV0KSB7XG5cbiAgICBjb25zdCBlcnJvciA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihgIyR7aW5wdXQuaWR9LWVycm9yYClcbiAgICBlcnJvci50ZXh0Q29udGVudCA9IGlucHV0LnZhbGlkYXRpb25NZXNzYWdlO1xuXG4gICAgZXJyb3IuY2xhc3NMaXN0LmFkZCh0aGlzLl9lcnJvckNsYXNzKTtcbiAgICBpbnB1dC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XG4gIH1cblxuXG4gIF9oaWRlRXJyb3JNZXNzYWdlKGlucHV0KSB7XG4gICAgY29uc3QgZXJyb3IgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0LmlkfS1lcnJvcmApXG4gICAgZXJyb3IudGV4dENvbnRlbnQgPSBcIiBcIjtcblxuICAgIGVycm9yLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fZXJyb3JDbGFzcyk7XG4gICAgaW5wdXQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xuICB9XG5cbiAgX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dCkge1xuICAgIGlmIChpbnB1dC52YWxpZGl0eS52YWxpZCkge1xuICAgICAgdGhpcy5faGlkZUVycm9yTWVzc2FnZShpbnB1dCk7XG4gICAgfVxuICAgIGVsc2UgdGhpcy5fc2hvd0Vycm9yTWVzc2FnZShpbnB1dCk7XG4gIH1cblxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG5cbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXQpID0+IHtcbiAgICAgIGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoKSA9PiB7XG4gICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dCk7XG4gICAgICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKHRoaXMuX2J1dHRvbik7XG5cbiAgICAgIH0pXG4gICAgfSlcbiAgfVxuXG4gIGVuYWJsZVZhbGlkYXRpb24oKSB7XG5cbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgZXZ0ID0+IHtcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpOztcbiAgICB9KTtcbiBcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xuICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgRm9ybVZhbGlkYXRvcjtcbiIsIlxuZXhwb3J0IGNvbnN0IGRlZmF1bHRGb3JtU2V0dGluZ3MgPSB7XG4gIGlucHV0U2VsZWN0b3I6IFwiLnBvcHVwX19maWVsZFwiLFxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIucG9wdXBfX3NhdmUtYnRuXCIsXG4gIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwicG9wdXBfX3NhdmUtYnRuX2Rpc2FibGVkXCIsXG4gIGlucHV0RXJyb3JDbGFzczogXCJwb3B1cF9fZmllbGRfdHlwZV9lcnJvclwiLFxuICBlcnJvckNsYXNzOiBcInBvcHVwX19lcnJvcl92aXNpYmxlXCJcbn1cblxuLy9Nb2RhbHNcbmV4cG9ydCBjb25zdCBwb3B1cEVkaXRGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF90eXBlX2VkaXQtcHJvZmlsZVwiKTtcbmV4cG9ydCBjb25zdCBwb3BVcE5ld0l0ZW0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX3R5cGVfbmV3LWl0ZW1cIik7XG5leHBvcnQgY29uc3QgcG9wdXBDb25maXJtRGVsZXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF90eXBlX2NvbmZpcm0tZGVsZXRlXCIpO1xuZXhwb3J0IGNvbnN0IGVkaXRGb3JtRWxlbWVudCA9IHBvcHVwRWRpdEZvcm0ucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybVwiKTtcbmV4cG9ydCBjb25zdCBhZGRDYXJkRm9ybSA9IHBvcFVwTmV3SXRlbS5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19mb3JtXCIpO1xuZXhwb3J0IGNvbnN0IHBvcHVwQ2hhbmdlUGljdHVyZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfdHlwZV9lZGl0LWltYWdlXCIpXG5leHBvcnQgY29uc3QgY2hhbmdlUGljdHVyZUVsZW1lbnQgPSBwb3B1cENoYW5nZVBpY3R1cmUucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybVwiKVxuXG5cbi8vQnV0dG9uIHZhcmlhYmxlc1xuXG5leHBvcnQgY29uc3QgZWRpdFByb2ZpbGVCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2VkaXQtYnRuXCIpO1xuZXhwb3J0IGNvbnN0IGVkaXRQcm9maWxlUGljdHVyZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fZWRpdC1pbWFnZVwiKVxuZXhwb3J0IGNvbnN0IGFkZE5ld1BsYWNlQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hZGQtYnV0dG9uXCIpO1xuZXhwb3J0IGNvbnN0IENsb3NlQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fY2xvc2UtYnRuXCIpXG5cblxuLy9QYWdlIFRleHRcbmV4cG9ydCBjb25zdCBwcm9maWxlTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fbmFtZVwiKTtcbmV4cG9ydCBjb25zdCBwcm9maWxlVGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX3N1YnRpdGxlXCIpO1xuZXhwb3J0IGNvbnN0IHByb2ZpbGVJbWFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9faW1hZ2VcIik7XG5cblxuLy9Gb3JtIFRleHRcbmV4cG9ydCBjb25zdCBwb3B1cE5hbWUgPSBwb3B1cEVkaXRGb3JtLnF1ZXJ5U2VsZWN0b3IoXCIjcG9wdXBfbmFtZVwiKTtcbmV4cG9ydCBjb25zdCBwb3B1cFRpdGxlID0gcG9wdXBFZGl0Rm9ybS5xdWVyeVNlbGVjdG9yKFwiI3BvcHVwX3RpdGxlXCIpO1xuXG4vL0NhcmQgVGVtcGxhdGVcbmV4cG9ydCBjb25zdCB0ZW1wbGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZC10ZW1wbGF0ZVwiKS5jb250ZW50O1xuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XG5cbmNsYXNzIFBvcHVwQ29uZmlybURlbGV0ZSBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3Ioe3N1Ym1pdEhhbmRsZXJ9LCBwb3B1cFNlbGVjdG9yKSB7XG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX3NhdmUtYnRuXCIpO1xuICAgIHRoaXMuX3N1Ym1pdEhhbmRsZXIgPSBzdWJtaXRIYW5kbGVyO1xuICB9XG5cbiAgb3BlbihjYXJkSWQsZXZ0KXtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSB0aGlzLl9zdWJtaXRCdXR0b24ubmFtZTtcbiAgICB0aGlzLl9jYXJkID0gZXZ0LnRhcmdldC5wYXJlbnRFbGVtZW50O1xuICAgIHRoaXMuX2NhcmRJZCA9IGNhcmRJZDtcbiAgICBzdXBlci5vcGVuKClcbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2dCkgPT4ge1xuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSBcIkRlbGV0aW5nLi4uXCI7XG4gICAgICB0aGlzLl9zdWJtaXRIYW5kbGVyKHRoaXMuX2NhcmQsIHRoaXMuX2NhcmRJZCk7XG5cbiAgICB9KTtcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFBvcHVwQ29uZmlybURlbGV0ZTsiLCJpbXBvcnQgXCIuLi9wYWdlcy9pbmRleC5jc3NcIjtcbmltcG9ydCBTZWN0aW9uIGZyb20gXCIuLi9jb21wb25lbnRzL1NlY3Rpb24uanNcIjtcbmltcG9ydCBBcGkgZnJvbSBcIi4uL2NvbXBvbmVudHMvQXBpLmpzXCI7XG5pbXBvcnQgQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9DYXJkLmpzXCI7XG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanNcIjtcbmltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanNcIjtcbmltcG9ydCBVc2VySW5mbyBmcm9tIFwiLi4vY29tcG9uZW50cy9Vc2VySW5mby5qc1wiO1xuaW1wb3J0IEZvcm1WYWxpZGF0b3IgZnJvbSBcIi4uL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qc1wiO1xuaW1wb3J0IHsgZGVmYXVsdEZvcm1TZXR0aW5ncywgZWRpdEZvcm1FbGVtZW50LCBhZGRDYXJkRm9ybSwgZWRpdFByb2ZpbGVCdXR0b24sIGFkZE5ld1BsYWNlQnV0dG9uLCBwcm9maWxlTmFtZSwgcHJvZmlsZVRpdGxlLCBwcm9maWxlSW1hZ2UsIHBvcHVwTmFtZSwgcG9wdXBUaXRsZSwgdGVtcGxhdGUsIGVkaXRQcm9maWxlUGljdHVyZSwgY2hhbmdlUGljdHVyZUVsZW1lbnQsIH0gZnJvbSBcIi4uL3V0aWxzL2NvbnN0YW50cy5qc1wiO1xuaW1wb3J0IFBvcHVwQ29uZmlybURlbGV0ZSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cENvbmZpcm1EZWxldGUuanNcIjtcblxuXG5cbi8vVmFsZGF0aW9uIGZvciBhbGwgZm9ybXNcblxuY29uc3QgZWRpdEZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihkZWZhdWx0Rm9ybVNldHRpbmdzLCBlZGl0Rm9ybUVsZW1lbnQpO1xuY29uc3QgbmV3SXRlbVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKGRlZmF1bHRGb3JtU2V0dGluZ3MsIGFkZENhcmRGb3JtKTtcbmNvbnN0IGNoYW5nZVByb2ZpbGVWYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihkZWZhdWx0Rm9ybVNldHRpbmdzLCBjaGFuZ2VQaWN0dXJlRWxlbWVudClcblxuZWRpdEZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xubmV3SXRlbVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG5jaGFuZ2VQcm9maWxlVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcblxuXG5cbi8vQVBJXG5cbmNvbnN0IGFwaSA9IG5ldyBBcGkoe1xuICBiYXNlVXJsOiBcImh0dHBzOi8vYXJvdW5kLm5vbW9yZXBhcnRpZXMuY28vdjEvZ3JvdXAtMTBcIixcbiAgaGVhZGVyczoge1xuICAgIGF1dGhvcml6YXRpb246IFwiOGU5NDJkNjMtYTRjYS00NjQyLThkZTMtNTUxNGUzZjA5YmEwXCIsXG4gICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgfVxufSk7XG5cbi8vR2V0IFVzZXIgSW5mb1xuY29uc3QgdXNlckluZm8gPSBuZXcgVXNlckluZm8oeyBuYW1lU2VsZWN0b3I6IHByb2ZpbGVOYW1lLCB0aXRsZVNlbGVjdG9yOiBwcm9maWxlVGl0bGUsIGF2YXRhcjogcHJvZmlsZUltYWdlIH0pXG5cbmNvbnN0IGVsZW1lbnRzID0gbmV3IFNlY3Rpb24oe1xuICByZW5kZXJlcjogZ2VuZXJhdGVDYXJkXG59LCBcIi5lbGVtZW50c1wiKVxuXG5cblByb21pc2UuYWxsKFthcGkuZ2V0UHJvZmlsZUluZm8oKSwgYXBpLmdldENhcmRzKCldKVxuICAudGhlbigocmVzKSA9PiB7XG4gICAgY29uc3QgW3VzZXJEYXRhLCBjYXJkRGF0YV0gPSByZXNcbiAgICB1c2VySW5mby5zZXRVc2VySW5mbyh7IG5hbWU6IHVzZXJEYXRhLm5hbWUsIHRpdGxlOiB1c2VyRGF0YS5hYm91dCwgaWQ6IHVzZXJEYXRhLl9pZCwgYXZhdGFyOiB1c2VyRGF0YS5hdmF0YXIgfSk7XG4gICAgZWxlbWVudHMucmVuZGVySXRlbXMoY2FyZERhdGEucmV2ZXJzZSgpKTtcbiAgfSlcbiAgLmNhdGNoKChlcnIpID0+IHtcbiAgICBjb25zb2xlLmxvZyhlcnIpO1xuICB9KTtcblxuXG4vL0VkaXQgUHJvZmlsZVxuXG5jb25zdCB1c2VyUHJvZmlsZSA9IG5ldyBQb3B1cFdpdGhGb3JtKHtcbiAgc3VibWl0Rm9ybUhhbmRsZXI6IChpdGVtKSA9PiB7XG4gICAgYXBpLnNldFByb2ZpbGVJbmZvKGl0ZW0pXG4gICAgICAudGhlbigodXNlckRhdGEpID0+IHtcbiAgICAgICAgdXNlckluZm8uc2V0VXNlclRleHQoeyBuYW1lOiB1c2VyRGF0YS5uYW1lLCB0aXRsZTogdXNlckRhdGEuYWJvdXQgfSk7XG4gICAgICAgIHVzZXJQcm9maWxlLmNsb3NlKClcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhlcnIpXG4gICAgICB9KVxuICB9XG59LCBcIi5wb3B1cF90eXBlX2VkaXQtcHJvZmlsZVwiKVxuXG51c2VyUHJvZmlsZS5zZXRFdmVudExpc3RlbmVycygpO1xuXG4vL0VkaXQgUHJvZmlsZSBQaWN0dXJlXG5cbmNvbnN0IGNoYW5nZVByb2ZpbGVQaWN0dXJlID0gbmV3IFBvcHVwV2l0aEZvcm0oe1xuICBzdWJtaXRGb3JtSGFuZGxlcjogKGl0ZW0pID0+IHtcbiAgICBhcGkudXBkYXRlUHJvZmlsZVBpY3R1cmUoaXRlbS5saW5rKVxuICAgICAgLnRoZW4oKHVzZXJEYXRhKSA9PiB7XG4gICAgICAgIHVzZXJJbmZvLnNldFVzZXJBdmF0YXIoeyBhdmF0YXI6IHVzZXJEYXRhLmF2YXRhciB9KVxuICAgICAgICBjaGFuZ2VQcm9maWxlUGljdHVyZS5jbG9zZSgpXG4gICAgICAgIGVkaXRGb3JtVmFsaWRhdG9yLnJlc2V0VmFsaWRhdGlvbigpXG4gICAgICB9KVxuXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhlcnIpXG4gICAgICB9KVxuICB9XG59LCBcIi5wb3B1cF90eXBlX2VkaXQtaW1hZ2VcIilcbmNoYW5nZVByb2ZpbGVQaWN0dXJlLnNldEV2ZW50TGlzdGVuZXJzKClcblxuXG5lZGl0UHJvZmlsZVBpY3R1cmUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgY2hhbmdlUHJvZmlsZVZhbGlkYXRvci5yZXNldFZhbGlkYXRpb24oKVxuICBjaGFuZ2VQcm9maWxlUGljdHVyZS5vcGVuKCk7XG59KVxuXG5cbmVkaXRQcm9maWxlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gIGVkaXRGb3JtVmFsaWRhdG9yLnJlc2V0VmFsaWRhdGlvbigpXG4gIGNvbnN0IGN1cnJlbnRVc2VyID0gdXNlckluZm8uZ2V0VXNlckluZm8oKTtcbiAgcG9wdXBOYW1lLnZhbHVlID0gY3VycmVudFVzZXIubmFtZTtcbiAgcG9wdXBUaXRsZS52YWx1ZSA9IGN1cnJlbnRVc2VyLnRpdGxlO1xuICB1c2VyUHJvZmlsZS5vcGVuKCk7XG59KTtcblxuXG4vL0NyZWF0ZSBjYXJkIGFuZCBhZGQgdG8gRE9NXG5cbmZ1bmN0aW9uIGNyZWF0ZUNhcmQoaXRlbSwgdGVtcGxhdGUpIHtcbiAgY29uc3QgY3VycmVudFVzZXIgPSB1c2VySW5mby5nZXRVc2VySW5mbygpO1xuICByZXR1cm4gbmV3IENhcmQoaXRlbSwgeyBjdXJyZW50VXNlcklkOiBjdXJyZW50VXNlci5pZCB9LCB0ZW1wbGF0ZSwge1xuICAgIGhhbmRsZUNhcmRDbGljazogKCkgPT4ge1xuICAgICAgaW1hZ2VQb3B1cC5vcGVuKHsgbGluazogaXRlbS5saW5rLCBuYW1lOiBpdGVtLm5hbWUgfSk7XG4gICAgfSxcbiAgICBoYW5kbGVMaWtlQ2xpY2s6IChsaWtlZCkgPT4gYXBpLmNoYW5nZUNhcmRTdGF0dXMoaXRlbS5faWQsIGxpa2VkKSxcbiAgICBjaGVja0NhcmRzRGF0YTogKCkgPT4gYXBpLmdldENhcmRzKCksXG4gICAgaGFuZGxlRGVsZXRlQ2xpY2s6IChldnQpID0+IHtcbiAgICAgIGNvbmZpcm1EZWxldGUub3BlbihpdGVtLl9pZCwgZXZ0KVxuICAgIH1cbiAgfSlcbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGVDYXJkKGl0ZW0pIHtcbiAgY29uc3QgY2FyZCA9IGNyZWF0ZUNhcmQoaXRlbSwgdGVtcGxhdGUpO1xuICByZXR1cm4gZWxlbWVudHMuYWRkSXRlbShjYXJkLmdldENhcmQoKSlcbn1cblxuXG4vL0FkZCBOZXcgQ2FyZFxuY29uc3QgcmVuZGVyZWRDYXJkID0gbmV3IFBvcHVwV2l0aEZvcm0oe1xuICBzdWJtaXRGb3JtSGFuZGxlcjogKGl0ZW0pID0+IHtcbiAgICBhcGkuYWRkTmV3Q2FyZChpdGVtKVxuICAgICAgLnRoZW4oKGl0ZW0pID0+IHtcbiAgICAgICAgZ2VuZXJhdGVDYXJkKGl0ZW0pXG4gICAgICAgIHJlbmRlcmVkQ2FyZC5jbG9zZSgpXG4gICAgICAgIGVkaXRGb3JtVmFsaWRhdG9yLnJlc2V0VmFsaWRhdGlvbigpXG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyKVxuICAgICAgfSlcblxuICB9XG59LCBcIi5wb3B1cF90eXBlX25ldy1pdGVtXCIpXG5yZW5kZXJlZENhcmQuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuXG4vL05ldyBJdGVtIE1vZGFsXG4vL0NsaWNrIGFkZCBidXR0b25cbmFkZE5ld1BsYWNlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZ0KSA9PiB7XG4gIG5ld0l0ZW1WYWxpZGF0b3IucmVzZXRWYWxpZGF0aW9uKClcbiAgcmVuZGVyZWRDYXJkLm9wZW4oKTtcbn0pO1xuXG5cbi8vTWF4aW1pc2UgSW1hZ2VcbmNvbnN0IGltYWdlUG9wdXAgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoXCIucG9wdXBfdHlwZV9waWN0dXJlXCIpO1xuaW1hZ2VQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xuXG4vL0NvbmZpcm0gRGVsZXRlXG5cbmNvbnN0IGNvbmZpcm1EZWxldGUgPSBuZXcgUG9wdXBDb25maXJtRGVsZXRlKHtcbiAgc3VibWl0SGFuZGxlcjogKGNhcmQsIGNhcmRJZCkgPT4ge1xuICAgIGFwaS5kZWxldGVDYXJkKGNhcmRJZClcbiAgICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgICAgY2FyZC5yZW1vdmUoKVxuICAgICAgICBjb25maXJtRGVsZXRlLmNsb3NlKClcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKHJlcykgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhyZXMpXG4gICAgICB9KVxuXG4gIH1cbn0sIFwiLnBvcHVwX3R5cGVfY29uZmlybS1kZWxldGVcIik7XG5jb25maXJtRGVsZXRlLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbiJdLCJuYW1lcyI6WyJTZWN0aW9uIiwiY2FyZENvbnRhaW5lciIsInJlbmRlcmVyIiwidGhpcyIsIl9yZW5kZXJlciIsIl9jb250YWluZXIiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJpdGVtcyIsImZvckVhY2giLCJpdGVtIiwiY2FyZCIsInByZXBlbmQiLCJBcGkiLCJiYXNlVXJsIiwiaGVhZGVycyIsIl9iYXNlVXJsIiwiX2hlYWRlcnMiLCJyZXMiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0Iiwic3RhdHVzIiwiZmV0Y2giLCJ0aGVuIiwiX2NoZWNrUmVzIiwibWV0aG9kIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJuYW1lIiwiYWJvdXQiLCJ0aXRsZSIsImlkIiwibGlrZWQiLCJyZW1vdmVDYXJkTGlrZSIsImFkZENhcmRMaWtlIiwiYXZhdGFyIiwiQ2FyZCIsImRhdGEiLCJjYXJkVGVtcGxhdGUiLCJjdXJyZW50VXNlcklkIiwiaGFuZGxlQ2FyZENsaWNrIiwiaGFuZGxlTGlrZUNsaWNrIiwiY2hlY2tDYXJkc0RhdGEiLCJoYW5kbGVEZWxldGVDbGljayIsIl9jYXJkRGF0YSIsIl90ZXh0IiwiX2xpbmsiLCJsaW5rIiwiX2NhcmRJZCIsIl9pZCIsImxpa2VzIiwib3duZXIiLCJfY2FyZFRlbXBsYXRlIiwiZGVsZXRlQnV0dG9uIiwiX293bmVySWQiLCJfY3VycmVudFVzZXJJZCIsIl9oYW5kbGVDYXJkQ2xpY2siLCJfaGFuZGxlTGlrZUNsaWNrIiwiX2NoZWNrQ2FyZHNEYXRhIiwiX2hhbmRsZURlbGV0ZUNsaWNrIiwiY2xvbmVOb2RlIiwic29tZSIsImxpa2UiLCJfY291bnRMaWtlcyIsIl9jaGVja0xpa2VTdGF0dXMiLCJfY2FyZCIsImNsYXNzTGlzdCIsImFkZCIsInRleHRDb250ZW50IiwibGVuZ3RoIiwibGlrZUJ1dHRvbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJldnQiLCJ0YXJnZXQiLCJjb250YWlucyIsInRvZ2dsZSIsIl91cGRhdGVMaWtlcyIsImNhdGNoIiwiZXJyIiwiY29uc29sZSIsImxvZyIsInN0eWxlIiwidmlzaWJpbGl0eSIsIl9nZXRUZW1wbGF0ZSIsIl9jYXJkSW1hZ2UiLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJfc2hvd0xpa2VTdGF0dXMiLCJzcmMiLCJhbHQiLCJQb3B1cCIsInBvcHVwU2VsZWN0b3IiLCJfcG9wdXBFbGVtZW50IiwiX2hhbmRsZUVzY0Nsb3NlIiwiYmluZCIsIl9zdWJtaXRCdXR0b24iLCJyZW1vdmUiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwia2V5IiwiY2xvc2UiLCJjbG9zZXN0IiwiUG9wdXBXaXRoSW1hZ2UiLCJpbWFnZSIsIlBvcHVwV2l0aEZvcm0iLCJzdWJtaXRGb3JtSGFuZGxlciIsIl9zdWJtaXRGb3JtSGFuZGxlciIsIl9wb3B1cEZvcm0iLCJfaW5wdXRMaXN0IiwicXVlcnlTZWxlY3RvckFsbCIsIl9pbnB1dFZhbHVlcyIsImlucHV0IiwidmFsdWUiLCJwcmV2ZW50RGVmYXVsdCIsIl9nZXRJbnB1dFZhbHVlcyIsInJlc2V0IiwiVXNlckluZm8iLCJuYW1lU2VsZWN0b3IiLCJ0aXRsZVNlbGVjdG9yIiwiX25hbWVTZWxlY3RvciIsIl90aXRsZVNlbGVjdG9yIiwiX2F2YXRhciIsInNldFVzZXJUZXh0Iiwic2V0VXNlckF2YXRhciIsIkZvcm1WYWxpZGF0b3IiLCJzZXR0aW5ncyIsImZvcm1FbGVtZW50IiwiX2lucHV0U2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwiX3N1Ym1pdEJ1dHRvblNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfaW5hY3RpdmVCdXR0b25DbGFzcyIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJfaW5wdXRFcnJvckNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiX2Vycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwiX2Zvcm0iLCJBcnJheSIsImZyb20iLCJfYnV0dG9uIiwiZXZlcnkiLCJ2YWxpZGl0eSIsInZhbGlkIiwiZGlzYWJsZWQiLCJfdG9nZ2xlQnV0dG9uU3RhdGUiLCJfaGlkZUVycm9yTWVzc2FnZSIsImVycm9yIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJfc2hvd0Vycm9yTWVzc2FnZSIsIl9jaGVja0lucHV0VmFsaWRpdHkiLCJkZWZhdWx0Rm9ybVNldHRpbmdzIiwicG9wdXBFZGl0Rm9ybSIsInBvcFVwTmV3SXRlbSIsImVkaXRGb3JtRWxlbWVudCIsImFkZENhcmRGb3JtIiwiY2hhbmdlUGljdHVyZUVsZW1lbnQiLCJlZGl0UHJvZmlsZUJ1dHRvbiIsImVkaXRQcm9maWxlUGljdHVyZSIsImFkZE5ld1BsYWNlQnV0dG9uIiwicHJvZmlsZU5hbWUiLCJwcm9maWxlVGl0bGUiLCJwcm9maWxlSW1hZ2UiLCJwb3B1cE5hbWUiLCJwb3B1cFRpdGxlIiwidGVtcGxhdGUiLCJjb250ZW50IiwiUG9wdXBDb25maXJtRGVsZXRlIiwic3VibWl0SGFuZGxlciIsIl9zdWJtaXRIYW5kbGVyIiwiY2FyZElkIiwicGFyZW50RWxlbWVudCIsImVkaXRGb3JtVmFsaWRhdG9yIiwibmV3SXRlbVZhbGlkYXRvciIsImNoYW5nZVByb2ZpbGVWYWxpZGF0b3IiLCJlbmFibGVWYWxpZGF0aW9uIiwiYXBpIiwiYXV0aG9yaXphdGlvbiIsInVzZXJJbmZvIiwiZWxlbWVudHMiLCJnZW5lcmF0ZUNhcmQiLCJhbGwiLCJnZXRQcm9maWxlSW5mbyIsImdldENhcmRzIiwidXNlckRhdGEiLCJjYXJkRGF0YSIsInNldFVzZXJJbmZvIiwicmVuZGVySXRlbXMiLCJyZXZlcnNlIiwidXNlclByb2ZpbGUiLCJzZXRQcm9maWxlSW5mbyIsInNldEV2ZW50TGlzdGVuZXJzIiwiY2hhbmdlUHJvZmlsZVBpY3R1cmUiLCJ1cGRhdGVQcm9maWxlUGljdHVyZSIsInJlc2V0VmFsaWRhdGlvbiIsImN1cnJlbnRVc2VyIiwiZ2V0VXNlckluZm8iLCJpbWFnZVBvcHVwIiwib3BlbiIsImNoYW5nZUNhcmRTdGF0dXMiLCJjb25maXJtRGVsZXRlIiwiY3JlYXRlQ2FyZCIsImFkZEl0ZW0iLCJnZXRDYXJkIiwicmVuZGVyZWRDYXJkIiwiYWRkTmV3Q2FyZCIsImRlbGV0ZUNhcmQiXSwic291cmNlUm9vdCI6IiJ9